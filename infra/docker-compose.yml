services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-revline}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-revline}
      POSTGRES_DB: ${POSTGRES_DB:-revline}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-revline} -d ${POSTGRES_DB:-revline}"]
      interval: 3s
      timeout: 3s
      retries: 40

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 40

  api:
    build:
      context: ../backend
      dockerfile: ../infra/dev.Dockerfile.api
    env_file: ../.env
    volumes:
      - ../backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      sh -c "uvicorn app.main:app --host ${API_HOST:-0.0.0.0} --port ${API_PORT:-8000} --reload"

  web:
    build:
      context: ../frontend
      dockerfile: ../infra/dev.Dockerfile.web
    env_file: ../.env
    volumes:
      - ../frontend:/app
      - web_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - api
    command: >
      sh -c "npm ci || npm install && npm run dev -- --host 0.0.0.0 --port 5173"

volumes:
  pg_data:
  web_node_modules: