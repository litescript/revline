name: revline
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-revline}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-revline}
      POSTGRES_DB: ${POSTGRES_DB:-revline}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-revline} -d ${POSTGRES_DB:-revline}"]
      interval: 3s
      timeout: 3s
      retries: 40

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 40

  # Development API service (hot reload, bind-mounted source)
  api:
    profiles: ["dev"]
    build:
      context: ../api
      dockerfile: Dockerfile.dev
    env_file: ../.env
    working_dir: /app
    volumes:
      - ../api:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      uvicorn app.main:api --host ${API_HOST:-0.0.0.0} --port ${API_PORT:-8000} --reload

  # Vite dev server for local DX
  web:
    profiles: ["dev"]
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    env_file: ../.env
    working_dir: /app
    volumes:
      - ../frontend:/app
      - web_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - api
    environment:
      - VITE_IN_DOCKER=1
      - VITE_API_BASE_URL=http://localhost:8000/api/v1
    command: >
      sh -c "npm ci || npm install && npm run dev -- --host 0.0.0.0 --port 5173"

  # Production-style API service (used by prod-preview / CI smoke)
  api-prod:
    profiles: ["prod"]
    build:
      context: ../api
      dockerfile: Dockerfile.dev
    env_file: ../.env
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    # ports:
    #   - "8000:8000"
    # Explicitly control process startup so we always serve FastAPI, not the module.
    entrypoint: ["uvicorn"]
    command:
      - "app.main:api"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "8000"

  # Production-style static build served by nginx
  frontend-prod:
    profiles: ["prod"]
    build:
      context: ..
      dockerfile: frontend/Dockerfile.prod
      args:
        VITE_BASE: /
        VITE_API_BASE: /api/v1
    image: revline/frontend:0.1.0
    ports:
      - "8080:80"
    depends_on:
      - api-prod

volumes:
  pg_data:
  web_node_modules:
