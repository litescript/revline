"""add service_categories table

Revision ID: 6eb65f56e74f
Revises: a4b1f3c2d9e0
Create Date: 2025-11-01 14:30:37.103788

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6eb65f56e74f'
down_revision: Union[str, Sequence[str], None] = 'a4b1f3c2d9e0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=16), nullable=False),
    sa.Column('label', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code', name='uq_service_category_code')
    )
    op.create_index(op.f('ix_service_categories_code'), 'service_categories', ['code'], unique=True)
    op.create_index(op.f('ix_service_categories_id'), 'service_categories', ['id'], unique=False)
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_repair_orders_status_str'), table_name='repair_orders')
    op.create_index(op.f('ix_repair_orders_customer_id'), 'repair_orders', ['customer_id'], unique=False)
    op.create_index(op.f('ix_repair_orders_opened_at'), 'repair_orders', ['opened_at'], unique=False)
    op.create_index(op.f('ix_repair_orders_vehicle_id'), 'repair_orders', ['vehicle_id'], unique=False)
    op.drop_column('repair_orders', 'closed_at')
    op.create_unique_constraint('uq_ro_status_status_code', 'ro_statuses', ['status_code'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_ro_status_status_code', 'ro_statuses', type_='unique')
    op.add_column('repair_orders', sa.Column('closed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_repair_orders_vehicle_id'), table_name='repair_orders')
    op.drop_index(op.f('ix_repair_orders_opened_at'), table_name='repair_orders')
    op.drop_index(op.f('ix_repair_orders_customer_id'), table_name='repair_orders')
    op.create_index(op.f('ix_repair_orders_status_str'), 'repair_orders', ['status'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey'))
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.drop_index(op.f('ix_service_categories_id'), table_name='service_categories')
    op.drop_index(op.f('ix_service_categories_code'), table_name='service_categories')
    op.drop_table('service_categories')
    # ### end Alembic commands ###
