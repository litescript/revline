[project]
name = "revline"
version = "0.5.0"
description = "Revline backend service (FastAPI + Postgres + Redis)"
requires-python = ">=3.10"
license = { text = "Proprietary" }

dependencies = [
  "fastapi>=0.115",
  "uvicorn[standard]>=0.30",
  "pydantic>=2",
  "pydantic-settings>=2",
  "orjson",
  "SQLAlchemy>=2.0",
  "psycopg2-binary",
  "redis>=5",
  "PyJWT>=2.9",
]


[project.optional-dependencies]
dev = [
  "pytest",
  "httpx",
  "ruff",
  "mypy",
  "bandit",
  "types-orjson",
  "types-redis",
  "types-requests",
]

############################
# Ruff configuration
############################
[tool.ruff]
line-length = 100
target-version = "py311"
# Keep only essential errors + import order for now
select = ["E", "F", "I"]
ignore = []
extend-exclude = ["migrations", "alembic", "venv", ".venv", "build", "dist"]


[tool.ruff.isort]
known-first-party = ["app"]
combine-as-imports = true

############################
# mypy configuration
############################
[tool.mypy]
# Runtime target for this repo
python_version = "3.11"

# Sprint-friendly defaults (advisory signal, not blocking)
strict = false
ignore_missing_imports = true
warn_unused_configs = true
warn_return_any = true
warn_unreachable = true
warn_redundant_casts = true
warn_unused_ignores = true

# If your code lives in api/app, tell mypy where to start
# (Adjust if your package layout differs.)
files = "app"

# Useful plugin for Pydantic models
plugins = ["pydantic.mypy"]

# Historical: was set to ["./api"]; not needed when pyproject is already in api/
# mypy_path = ["./api"]

# Third-party/import-heavy modules we donâ€™t type-check deeply
[[tool.mypy.overrides]]
module = [
    "redis.*",
    "uvicorn.*",
    "orjson.*",
    "sqlalchemy.*",
    "alembic.*",
]
ignore_missing_imports = true

